{"version":3,"sources":["components/PostsList/components/PostListItem/PostListItem.module.scss","Layouts/Auth/Auth.module.scss","components/Loader/Loader.module.scss","store/types/auth.ts","store/auth.ts","store/types/posts.ts","Layouts/Main/components/Logo.tsx","Layouts/Main/components/Navbar.tsx","Layouts/Main/LayoutMain.tsx","Pages/HomePage.tsx","components/Loader/Loader.tsx","helpers/api.ts","store/posts.ts","hooks/useTypedSelector.ts","components/Form/AddComment/AddComment.tsx","components/Modals/components/Wrapper.tsx","components/Modals/components/PostsDetails.tsx","components/PostsList/components/PostListItem/PostListItem.tsx","components/PostsList/PostsList.tsx","views/postView/PostView.tsx","Pages/PostsPage.tsx","Layouts/Auth/LayoutAuth.tsx","views/loginView/components/LoginForm.tsx","views/loginView/LoginView.tsx","Pages/LoginPage.tsx","App.tsx","store/index.ts","index.tsx"],"names":["module","exports","AuthActionsEnum","PostsActionsEnum","initialState","isAuth","user","isLoading","error","AuthActionCreators","setUser","type","SET_USER","payload","setIsAuth","auth","SET_AUTH","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","login","username","password","dispatch","a","setTimeout","fetch","request","json","usersData","mockUser","find","localStorage","setItem","e","logout","removeItem","Logo","to","className","MENU_LINK","label","path","Navbar","useDispatch","map","link","isActive","onClick","LayoutMain","HomePage","Loader","classes","wrapperSpinner","Spinner","animation","BASE_URL","endPoint","params","method","response","data","ok","Error","console","log","API","postId","then","filter","el","comment","headers","body","JSON","stringify","id","posts","loadingPosts","errorPosts","postDetails","commentsPost","PostsActionsCreator","setPosts","SET_POSTS","fetchPosts","fetchPostsLoading","fetchErrorPosts","FETCH_POSTS_ERROR","FETCH_POSTS_LOADING","SetDetailsPost","SET_DETAILS_POST","fetchDetailsPost","setCommentsPost","SET_COMMENTS_POST","fetchCommentsPost","comments","setNewComment","SET_NEW_COMMENT","sendComments","backComment","deleteComment","DELETE_COMMENT","deleteFetchComment","useTypedSelector","useSelector","AddComment","useState","setComment","isValid","setIsValid","state","onSubmit","preventDefault","length","email","name","classNames","placeholder","style","height","value","onChange","target","onBlur","htmlFor","Wrapper","show","handleClose","backdrop","keyboard","size","title","children","Modal","onHide","Header","closeButton","Title","Body","defaultProps","PostDetails","showComments","setShowComments","Boolean","PostListItem","post","handleShowModal","post__left","postTitle","postBody","post__right","Button","variant","PostsList","modalOpen","setModalOpen","useCallback","PostView","useEffect","PostsPage","LayoutAuth","auth__left","auth__right","LoginForm","setEmail","setPassword","autoComplete","color","disabled","LoginView","LoginPage","App","getItem","element","index","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6ab4799.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostListItem_post__30y8A\",\"postTitle\":\"PostListItem_postTitle__3WN76\",\"postBody\":\"PostListItem_postBody___BpLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3lCWp\",\"auth__left\":\"Auth_auth__left__2vh-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperSpinner\":\"Loader_wrapperSpinner__3y503\"};","import { IUser } from '../../types/IUser';\n\nexport interface AuthState {\n  isAuth: boolean,\n  user: IUser,\n  isLoading: boolean,\n  error: string,\n}\n\nexport enum AuthActionsEnum {\n  SET_AUTH = 'SET_AUTH',\n  SET_ERROR = 'SET_ERROR',\n  SET_USER = 'SER_USER',\n  SET_IS_LOADING = 'SET_IS_LOADING',\n}\n\ninterface SetAuthAction {\n  type: AuthActionsEnum.SET_AUTH;\n  payload: boolean\n}\n\ninterface SetErrorAction {\n  type: AuthActionsEnum.SET_ERROR;\n  payload: string\n}\n\ninterface SetUserAction {\n  type: AuthActionsEnum.SET_USER;\n  payload: IUser\n}\n\ninterface SetIsLoadingAction {\n  type: AuthActionsEnum.SET_IS_LOADING;\n  payload: boolean\n}\n\nexport type AuthAction =\n  SetAuthAction | SetErrorAction | SetUserAction | SetIsLoadingAction;\n","import { Dispatch } from 'redux';\nimport { IUser } from '../types/IUser';\nimport { AuthAction, AuthActionsEnum, AuthState } from './types/auth';\n\nconst initialState: AuthState = {\n  isAuth: false,\n  user: {} as IUser,\n  isLoading: false,\n  error: '',\n};\n\nexport const AuthActionCreators = {\n  setUser: (user: IUser) => ({ type: AuthActionsEnum.SET_USER, payload: user }),\n  setIsAuth: (auth: boolean) => ({ type: AuthActionsEnum.SET_AUTH, payload: auth }),\n  setIsLoading: (payload: boolean) => ({ type: AuthActionsEnum.SET_IS_LOADING, payload }),\n  setError: (payload: string) => ({ type: AuthActionsEnum.SET_ERROR, payload }),\n  login: (username: string, password: string) => async (dispatch: Dispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsLoading(true));\n\n      setTimeout(async () => {\n        const request = await fetch('./users.json');\n        const usersData: IUser[] = await request.json();\n        const mockUser = usersData.find(user => user.username\n          === username && user.password === password);\n\n        if (mockUser) {\n          localStorage.setItem('auth', 'true');\n          localStorage.setItem('username', mockUser.username);\n\n          dispatch(AuthActionCreators.setIsAuth(true));\n          dispatch(AuthActionCreators.setUser(mockUser));\n        } else {\n          dispatch(AuthActionCreators.setError('Некорректный Email или password'));\n        }\n\n        dispatch(AuthActionCreators.setIsLoading(false));\n      }, 1000);\n    } catch (e) {\n      dispatch(AuthActionCreators.setError('Произошла ошибка'));\n    }\n  },\n  logout: () => async (dispatch: Dispatch) => {\n    localStorage.removeItem('auth');\n    localStorage.removeItem('username');\n\n    dispatch(AuthActionCreators.setUser({} as IUser));\n    dispatch(AuthActionCreators.setIsAuth(false));\n  },\n};\n\nexport const authReducer = (state = initialState, action: AuthAction) => {\n  switch (action.type) {\n    case AuthActionsEnum.SET_AUTH:\n      return {\n        ...state,\n        isAuth: action.payload,\n        isLoading: false,\n      };\n\n    case AuthActionsEnum.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case AuthActionsEnum.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n\n    case AuthActionsEnum.SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { Comment } from '../../types/Comment';\nimport { Post } from '../../types/Post';\n\nexport interface PostsState {\n  posts: Post[] | never[],\n  loadingPosts: boolean,\n  errorPosts: null | string,\n  postDetails: Post | null,\n  commentsPost: Comment[],\n}\n\nexport enum PostsActionsEnum {\n  FETCH_POSTS_LOADING = 'FETCH_POSTS_LOADING',\n  SET_POSTS = 'SET_POSTS',\n  FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR',\n  SET_DETAILS_POST = 'SET_DETAILS_POST',\n  FETCH_DETAILS_POST = 'FETCH_DETAILS_POST',\n  SET_COMMENTS_POST = 'SET_COMMENTS_POST',\n  FETCH_COMMENTS_POST = 'FETCH_COMMENTS_POST',\n  SEND_COMMENT = 'SEND_COMMENT',\n  SET_NEW_COMMENT = 'SET_NEW_COMMENT',\n  DELETE_COMMENT = 'DELETE_COMMENT',\n}\n\nexport interface SetPostsActions {\n  type: PostsActionsEnum.SET_POSTS,\n  payload: Post[]\n}\n\nexport interface FetchPostsLoadingActions {\n  type: PostsActionsEnum.FETCH_POSTS_LOADING,\n}\n\nexport interface FetchPostsErrorActions {\n  type: PostsActionsEnum.FETCH_POSTS_ERROR,\n  payload: string | null,\n}\n\nexport interface SetDetailsPost {\n  type: PostsActionsEnum.SET_DETAILS_POST,\n  payload: Post | null,\n}\n\nexport interface SetCommentsPost {\n  type: PostsActionsEnum.SET_COMMENTS_POST,\n  payload: Comment[],\n}\n\nexport interface FetchCommentsPost {\n  type: PostsActionsEnum.FETCH_COMMENTS_POST,\n  payload: number | string,\n}\n\nexport interface SetNewComment {\n  type: PostsActionsEnum.SET_NEW_COMMENT,\n  payload: Comment,\n}\n\nexport interface DeleteComment {\n  type: PostsActionsEnum.DELETE_COMMENT,\n  payload: number,\n}\n\nexport type PostActions = SetPostsActions\n| FetchPostsLoadingActions\n| FetchPostsErrorActions\n| SetDetailsPost\n| SetCommentsPost\n| FetchCommentsPost\n| SetNewComment\n| DeleteComment;\n","import { Link } from 'react-router-dom';\n\nexport const Logo = () => (\n  <Link\n    to=\"/\"\n    className=\"logo\"\n  >\n    #1\n  </Link>\n);\n","import { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { AuthActionCreators } from '../../../store/auth';\nimport { Logo } from './Logo';\n\nconst MENU_LINK = [\n  {\n    label: 'Posts',\n    path: '/posts',\n  },\n];\n\ninterface MenuItem {\n  label: string,\n  path: string\n}\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(AuthActionCreators.logout());\n  };\n\n  return (\n    <div className=\"layout__navbar\">\n      <Logo />\n\n      <ul className=\"navbar-list\">\n        {MENU_LINK.map((link: MenuItem) => (\n          <li\n            key={link.label}\n            className=\"navbar-list__item\"\n          >\n            <NavLink\n              to={link.path}\n              className={({ isActive }) => (isActive ? 'navbar-list__link navbar-list__link--active' : 'navbar-list__link')}\n            >\n              {link.label}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n      <button\n        type=\"button\"\n        onClick={handleLogout}\n        className=\"btn btn-light ms-3\"\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nconst LayoutMain = () => (\n  <div className=\"layout\">\n    <Navbar />\n\n    <div className=\"layout__content\">\n      <Outlet />\n    </div>\n  </div>\n);\n\nexport default LayoutMain;\n","export const HomePage = () => {\n  return (\n    <>\n      <h1 className=\"mb-3\">Home Page</h1>\n      <h5> &larr; Click on the &quot;posts&quot; in the menu</h5>\n    </>\n  );\n};\n","import { Spinner } from 'react-bootstrap';\nimport classes from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div className={classes.wrapperSpinner}>\n      <Spinner animation=\"grow\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { Comment } from '../types/Comment';\n\ninterface Params {\n  method: string,\n  headers?: {\n    'Content-Type': string,\n  },\n  body?: string,\n}\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nconst request = async (endPoint: string, params: Params = { method: 'GET' }) => {\n  try {\n    const response = await fetch(`${BASE_URL}${endPoint}`, params);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error('Error with request');\n    }\n\n    return data;\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n\n    return null;\n  }\n};\n\nexport const API = {\n  getPosts: () => request('/posts'),\n  getPostDetails: (postId: number | string) => request(`/posts/${postId}`),\n  getPostComments: (postId: number | string) => {\n    return request('/comments')\n      .then(data => data.filter((el: Comment) => el.postId === postId));\n  },\n  addComment: (comment: Partial<Comment>) => request('/comments', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  }),\n  deleteComment: (id: number) => request(`/comments/${id}`, { method: 'DELETE' }),\n};\n","import { Dispatch } from 'redux';\nimport { API } from '../helpers/api';\nimport { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { PostsState, PostActions, PostsActionsEnum } from './types/posts';\n\nconst initialState: PostsState = {\n  posts: [],\n  loadingPosts: false,\n  errorPosts: null,\n  postDetails: null,\n  commentsPost: [],\n};\n// const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\n\nexport const PostsActionsCreator = {\n  setPosts: (payload: Post[]) => ({ type: PostsActionsEnum.SET_POSTS, payload }),\n  fetchPosts() {\n    return async (dispatch: Dispatch) => {\n      try {\n        dispatch(PostsActionsCreator.fetchPostsLoading());\n        const response = await API.getPosts();\n\n        dispatch(PostsActionsCreator.setPosts(response));\n      } catch (e) {\n        const errMessages = 'Прозошла ошибака при загрузке постов. Попробуйте позже!';\n\n        dispatch(PostsActionsCreator.fetchErrorPosts(errMessages));\n\n        // eslint-disable-next-line no-console\n        console.log(e);\n      }\n    };\n  },\n  fetchErrorPosts: (payload: null | string) => {\n    return ({ type: PostsActionsEnum.FETCH_POSTS_ERROR, payload });\n  },\n  fetchPostsLoading: () => ({ type: PostsActionsEnum.FETCH_POSTS_LOADING }),\n  SetDetailsPost: (payload: Post) => ({ type: PostsActionsEnum.SET_DETAILS_POST, payload }),\n  fetchDetailsPost(id: string | number) {\n    return async (dispatch: Dispatch) => {\n      try {\n        const data = await API.getPostDetails(id);\n\n        dispatch(PostsActionsCreator.SetDetailsPost(data));\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(e);\n      }\n    };\n  },\n  setCommentsPost: (payload: Comment[]) => ({ type: PostsActionsEnum.SET_COMMENTS_POST, payload }),\n  fetchCommentsPost(id: number | string) {\n    return async (dispatch: Dispatch) => {\n      try {\n        const comments = await API.getPostComments(id);\n\n        dispatch(PostsActionsCreator.setCommentsPost(comments));\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(e);\n      }\n    };\n  },\n  setNewComment: (payload: Comment) => ({ type: PostsActionsEnum.SET_NEW_COMMENT, payload }),\n  sendComments(comment: Partial<Comment>) {\n    return async (dispatch: Dispatch) => {\n      const backComment = await API.addComment(comment);\n\n      dispatch(PostsActionsCreator.setNewComment(backComment));\n    };\n  },\n  deleteComment: (id: number) => ({ type: PostsActionsEnum.DELETE_COMMENT, payload: id }),\n  deleteFetchComment(id: number) {\n    return async (dispatch: Dispatch) => {\n      await API.deleteComment(id);\n\n      dispatch(PostsActionsCreator.deleteComment(id));\n    };\n  },\n};\n\nexport const postsReducer = (state = initialState, action: PostActions): PostsState => {\n  switch (action.type) {\n    case PostsActionsEnum.SET_POSTS:\n      return {\n        ...state,\n        loadingPosts: false,\n        posts: action.payload,\n      };\n\n    case PostsActionsEnum.FETCH_POSTS_LOADING:\n      return {\n        ...state,\n        loadingPosts: true,\n      };\n\n    case PostsActionsEnum.FETCH_POSTS_ERROR:\n      return {\n        ...state,\n        loadingPosts: false,\n        errorPosts: action.payload,\n      };\n\n    case PostsActionsEnum.SET_DETAILS_POST:\n      return {\n        ...state,\n        postDetails: action.payload,\n      };\n\n    case PostsActionsEnum.SET_COMMENTS_POST:\n      return {\n        ...state,\n        commentsPost: action.payload,\n      };\n\n    case PostsActionsEnum.SET_NEW_COMMENT:\n      return {\n        ...state,\n        commentsPost: [...state.commentsPost, action.payload],\n      };\n\n    case PostsActionsEnum.DELETE_COMMENT:\n      return {\n        ...state,\n        commentsPost: state.commentsPost.filter((comment: Comment) => {\n          return comment.id !== action.payload;\n        }),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/index';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport { FC, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\nimport { PostsActionsCreator } from '../../../store/posts';\nimport { Comment } from '../../../types/Comment';\n\ntype Props = {\n  postId: number | undefined,\n};\n\nexport const AddComment: FC<Props> = ({ postId }) => {\n  const [comment, setComment] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  const { user } = useTypedSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (comment.length !== 0) {\n      const data: Partial<Comment> = {\n        email: user.username,\n        name: user.username,\n        body: comment,\n        postId,\n      };\n\n      dispatch(PostsActionsCreator.sendComments(data));\n      setComment('');\n    } else {\n      setIsValid(true);\n    }\n  };\n\n  return (\n    <form\n      className=\"test\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-floating\">\n        <textarea\n          className={classNames('form-control mb-3', { 'is-invalid': isValid })}\n          placeholder=\"Leave a comment here\"\n          id=\"floatingTextarea\"\n          style={{ height: '100px' }}\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          onBlur={() => setIsValid(false)}\n        />\n        <label htmlFor=\"floatingTextarea\">\n          Add Comments\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-100\"\n        >\n          Send\n        </button>\n      </div>\n    </form>\n  );\n};\n","import { FC } from 'react';\nimport { Modal } from 'react-bootstrap';\n\ntype Props = {\n  show: boolean,\n  handleClose: () => void,\n  backdrop?: 'static' | boolean,\n  keyboard?: boolean\n  size?: 'sm' | 'lg' | 'xl',\n  title: string,\n  children: JSX.Element,\n};\n\nexport const Wrapper: FC<Props> = ({\n  show,\n  handleClose,\n  backdrop,\n  keyboard,\n  size,\n  title,\n  children,\n}) => {\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      backdrop={backdrop}\n      keyboard={keyboard}\n      size={size}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {children}\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nWrapper.defaultProps = {\n  backdrop: true,\n  keyboard: true,\n  size: 'lg',\n};\n","import { FC, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\nimport { PostsActionsCreator } from '../../../store/posts';\nimport { Comment } from '../../../types/Comment';\nimport { AddComment } from '../../Form/AddComment/AddComment';\nimport { Wrapper } from './Wrapper';\n\ntype Props = {\n  show: boolean,\n  handleClose: () => void,\n};\n\nexport const PostDetails: FC<Props> = ({ show, handleClose }) => {\n  const [showComments, setShowComments] = useState(true);\n  const { postDetails, commentsPost } = useTypedSelector(state => state.posts);\n  const dispatch = useDispatch();\n\n  const handleDelete = (id: number) => {\n    dispatch(PostsActionsCreator.deleteFetchComment(id));\n  };\n\n  return (\n    <Wrapper\n      show={show}\n      handleClose={handleClose}\n      title=\"Posts details\"\n    >\n      <>\n        <p>\n          {postDetails?.body}\n        </p>\n        <hr />\n        {Boolean(commentsPost.length) && (\n          <>\n            <div className=\"d-flex align-items-center justify-content-between mb-4\">\n              <h4 className=\"mb-0\">Comments:</h4>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-dark\"\n                onClick={() => setShowComments(!showComments)}\n              >\n                {showComments ? 'Hide' : 'Show'}\n              </button>\n            </div>\n            {showComments && (\n              <ul>\n                {commentsPost.map((comment: Comment) => (\n                  <li\n                    key={comment.id}\n                    className=\"d-flex align-items-center justify-content-between mb-2\"\n                  >\n                    <span className=\"text-break pr-3\">{comment.body}</span>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                      onClick={() => handleDelete(comment.id)}\n                    >\n                      X\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            )}\n            <hr />\n          </>\n        )}\n\n        <AddComment postId={postDetails?.id} />\n      </>\n    </Wrapper>\n  );\n};\n","import { FC } from 'react';\nimport Button from 'react-bootstrap/esm/Button';\nimport { Post } from '../../../../types/Post';\nimport classes from './PostListItem.module.scss';\n\ntype Props = {\n  post: Post;\n  handleShowModal: (id: string | number) => void;\n};\n\nexport const PostListItem: FC<Props> = ({ post, handleShowModal }) => {\n  return (\n    <li className={classes.post}>\n      <div className={classes.post__left}>\n        <div className={classes.postTitle}>\n          {post.title}\n        </div>\n        <p className={classes.postBody}>\n          {post.body}\n        </p>\n      </div>\n\n      <div className={classes.post__right}>\n        <Button\n          variant=\"outline-dark\"\n          onClick={() => handleShowModal(post.id)}\n        >\n          Open\n        </Button>\n      </div>\n    </li>\n  );\n};\n","import { FC, useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { PostsActionsCreator } from '../../store/posts';\nimport { Post } from '../../types/Post';\nimport { ModalPostDetails } from '../Modals';\nimport { PostListItem } from './components/PostListItem/PostListItem';\n\ntype Props = {\n  posts: Post[];\n};\n\nexport const PostsList: FC<Props> = ({ posts }) => {\n  const dispatch = useDispatch();\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleClose = useCallback(() => {\n    setModalOpen(false);\n  }, [modalOpen]);\n\n  const handleShowModal = useCallback((id) => {\n    dispatch(PostsActionsCreator.fetchDetailsPost(id));\n    dispatch(PostsActionsCreator.fetchCommentsPost(id));\n\n    setModalOpen(true);\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      {posts.length > 0 ? (\n        <ul>\n          {posts.map((post: Post) => (\n            <PostListItem\n              key={post.id}\n              post={post}\n              handleShowModal={handleShowModal}\n            />\n          ))}\n        </ul>\n      ) : (\n        <h3>Posts not found</h3>\n      )}\n\n      <ModalPostDetails\n        show={modalOpen}\n        handleClose={handleClose}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Loader from '../../components/Loader/Loader';\nimport { PostsList } from '../../components/PostsList/PostsList';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { PostsActionsCreator } from '../../store/posts';\n\nexport const PostView = () => {\n  const { posts, loadingPosts, errorPosts } = useTypedSelector(state => state.posts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(PostsActionsCreator.fetchPosts());\n  }, []);\n\n  if (errorPosts) {\n    return <h3>{errorPosts}</h3>;\n  }\n\n  if (loadingPosts) {\n    return <Loader />;\n  }\n\n  return <PostsList posts={posts} />;\n};\n","import { PostView } from '../views/postView/PostView';\n\nexport const PostsPage = () => (\n  <>\n    <h1>Posts Page</h1>\n\n    <PostView />\n  </>\n);\n","import { Outlet } from 'react-router-dom';\nimport classes from './Auth.module.scss';\n\nconst LayoutAuth = () => {\n  return (\n    <div className={classes.auth}>\n      <div className={classes.auth__left} />\n      <div className={classes.auth__right}>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutAuth;\n","import {\n  FC, useState,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\nimport { AuthActionCreators } from '../../../store/auth';\n\nexport const LoginForm: FC = () => {\n  const [email, setEmail] = useState('user');\n  const [password, setPassword] = useState('123');\n\n  const dispatch = useDispatch();\n\n  const { error, isLoading } = useTypedSelector(state => state.auth);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch(AuthActionCreators.login(email, password));\n  };\n\n  return (\n    <div className=\"FormLoginWrapper\">\n      <form\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        {error && (\n          <div style={{ color: 'red' }}>\n            {error}\n          </div>\n        )}\n        <div className=\"mb-3\">\n          <label\n            htmlFor=\"email\"\n            className=\"form-label\"\n          >\n            Email address\n\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </label>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">\n            Password\n\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              autoComplete=\"off\"\n            />\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          disabled={isLoading}\n        >\n          {isLoading ? 'Loading...' : 'Submit'}\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { LoginForm } from './components/LoginForm';\n\nexport const LoginView = () => {\n  return <LoginForm />;\n};\n","import { LoginView } from '../views/loginView/LoginView';\n\nexport const LoginPage = () => {\n  return <LoginView />;\n};\n","import { useEffect } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LayoutMain from './Layouts/Main/LayoutMain';\nimport { HomePage } from './Pages/HomePage';\nimport { PostsPage } from './Pages/PostsPage';\nimport LayoutAuth from './Layouts/Auth/LayoutAuth';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { LoginPage } from './Pages/LoginPage';\nimport { AuthActionCreators } from './store/auth';\nimport { IUser } from './types/IUser';\n\nimport './App.scss';\n\nconst App = () => {\n  const { isAuth } = useTypedSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      dispatch(AuthActionCreators.setUser({ username: localStorage.getItem('username' || '') } as IUser));\n      dispatch(AuthActionCreators.setIsAuth(true));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        {\n          isAuth ? (\n            <Route path=\"/\" element={<LayoutMain />}>\n              <Route path=\"posts\" element={<PostsPage />} />\n              <Route index element={<HomePage />} />\n              <Route path=\"login\" element={<Navigate to=\"/\" />} />\n            </Route>\n          ) : (\n            <Route path=\"/*\" element={<LayoutAuth />}>\n              <Route path=\"login\" element={<LoginPage />} />\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n            </Route>\n          )\n        }\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { authReducer } from './auth';\nimport { postsReducer } from './posts';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  auth: authReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}